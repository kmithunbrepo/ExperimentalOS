alias functionNum R1;
alias currentPID R2;
alias word R3;
if(functionNum==2) then //Disk Load function
	alias pageNum R3;
	alias blockNum R4;
	multipush(R1,R2,R3,R4);
	R1=3;
	call MOD_0;
	multipop(R1,R2,R3,R4);
	[DISK_STATUS_TABLE+1]=0;
	[DISK_STATUS_TABLE+2]=pageNum;
	[DISK_STATUS_TABLE+3]=blockNum;
	load(pageNum,blockNum);
	[PROCESS_TABLE+currentPID*16+4]=WAIT_DISK;
	call SCHEDULER;
	return;
endif;
if(functionNum==3) then  //Terminal Write function
	multipush(R1,R2,R3);
	R1=8;
	call MOD_0;
	multipop(R1,R2,R3);
	print word;
	multipush(R1,R2,R3);
	R1=9;
	call MOD_0;
	multipop(R1,R2,R3);
	return;	
endif;
if(functionNum==4) then //Terminal Read function
	alias wordAdd R3;
	multipush(R1,R2,R3);
	R1=8;
	call MOD_0;
	multipop(R1,R2,R3);
	read;
	[PROCESS_TABLE+currentPID*16+4]=WAIT_TERMINAL;
	multipush(R1,R2,R3);
	call SCHEDULER;
	multipop(R1,R2,R3);
	alias wordPhyAdd R4;
	wordPhyAdd=([PTBR+2*(wordAdd/512)]*512)+(wordAdd%512);
	[wordPhyAdd]=[PROCESS_TABLE+currentPID*16+8];
	return;
endif;
return;

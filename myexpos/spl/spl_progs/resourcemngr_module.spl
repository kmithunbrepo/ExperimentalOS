alias functionNum R1;
alias currentPID R2;
if(functionNum==3) then
	while([DISK_STATUS_TABLE]==1) do
		[PROCESS_TABLE+currentPID*16+4]=WAIT_DISK;
		multipush(R1,R2,R3);
		call SCHEDULER;
		multipop(R1,R2,R3);
	endwhile;
	[DISK_STATUS_TABLE]=1;
	[DISK_STATUS_TABLE+4]=currentPID;
	return;
endif;
if(functionNum==8) then
	while([TERMINAL_STATUS_TABLE]==1) do
		[PROCESS_TABLE+currentPID*16+4]=WAIT_TERMINAL;
		multipush(R1,R2);
		call SCHEDULER;
		multipop(R1,R2);
	endwhile;
	[TERMINAL_STATUS_TABLE]=1;
	[TERMINAL_STATUS_TABLE+1]=currentPID;
	return;
endif;
if(functionNum==9) then
	if([TERMINAL_STATUS_TABLE+1]!=currentPID) then
		R0=-1;
		return;
	endif;
	[TERMINAL_STATUS_TABLE]=0;
	alias pid R4;
	pid=1;
	while(pid<16) do
		if([PROCESS_TABLE+pid*16+4]==WAIT_TERMINAL) then
			[PROCESS_TABLE+pid*16+4]=READY;
		endif;
		pid=pid+1;
	endwhile;
	R0=0;
	return;
endif;
return;
